#include "Pods-Tests-GeoFeatures.xcconfig"
CLANG_CXX_LANGUAGE_STANDARD = ${PODS_TESTS_GEOFEATURES_CLANG_CXX_LANGUAGE_STANDARD}
CLANG_CXX_LIBRARY = ${PODS_TESTS_GEOFEATURES_CLANG_CXX_LIBRARY}
GCC_C_LANGUAGE_STANDARD = ${PODS_TESTS_GEOFEATURES_GCC_C_LANGUAGE_STANDARD}
GCC_PREPROCESSOR_DEFINITIONS = $(inherited) COCOAPODS=1
HEADER_SEARCH_PATHS = "${PODS_ROOT}/Headers/Private" "${PODS_ROOT}/Headers/Private/GeoFeatures" "${PODS_ROOT}/Headers/Public" "${PODS_ROOT}/Headers/Public/GeoFeatures" "${PODS_ROOT}/Headers/Public/boost" "${PODS_ROOT}/Headers/Public/boost/boost" "${PODS_ROOT}/Headers/Public/boost/boost/algorithm" "${PODS_ROOT}/Headers/Public/boost/boost/algorithm/string" "${PODS_ROOT}/Headers/Public/boost/boost/algorithm/string/detail" "${PODS_ROOT}/Headers/Public/boost/boost/algorithm/string/std" "${PODS_ROOT}/Headers/Public/boost/boost/bind" "${PODS_ROOT}/Headers/Public/boost/boost/concept" "${PODS_ROOT}/Headers/Public/boost/boost/concept/detail" "${PODS_ROOT}/Headers/Public/boost/boost/concept_check" "${PODS_ROOT}/Headers/Public/boost/boost/config" "${PODS_ROOT}/Headers/Public/boost/boost/config/abi" "${PODS_ROOT}/Headers/Public/boost/boost/config/compiler" "${PODS_ROOT}/Headers/Public/boost/boost/config/no_tr1" "${PODS_ROOT}/Headers/Public/boost/boost/config/platform" "${PODS_ROOT}/Headers/Public/boost/boost/config/stdlib" "${PODS_ROOT}/Headers/Public/boost/boost/container" "${PODS_ROOT}/Headers/Public/boost/boost/container/detail" "${PODS_ROOT}/Headers/Public/boost/boost/core" "${PODS_ROOT}/Headers/Public/boost/boost/detail" "${PODS_ROOT}/Headers/Public/boost/boost/exception" "${PODS_ROOT}/Headers/Public/boost/boost/exception/detail" "${PODS_ROOT}/Headers/Public/boost/boost/format" "${PODS_ROOT}/Headers/Public/boost/boost/format/detail" "${PODS_ROOT}/Headers/Public/boost/boost/function" "${PODS_ROOT}/Headers/Public/boost/boost/function/detail" "${PODS_ROOT}/Headers/Public/boost/boost/function_types" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/config" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/components_impl" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/encoding" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_cc_loop" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_retag_default_cc" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_tags" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_variate_loop" "${PODS_ROOT}/Headers/Public/boost/boost/functional" "${PODS_ROOT}/Headers/Public/boost/boost/functional/hash" "${PODS_ROOT}/Headers/Public/boost/boost/geometry" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/buffer" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/centroid" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/closest_feature" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/comparable_distance" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/disjoint" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/distance" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/equals" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/intersection" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/is_simple" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/is_valid" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/overlay" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/relate" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/sections" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/turns" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/within" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/dispatch" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/arithmetic" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/core" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/geometries" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/geometries/concepts" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/adaptors" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/algorithms" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/linear" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/node" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/quadratic" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/rstar" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/utilities" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/visitors" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/dsv" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/svg" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/wkt" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/wkt/detail" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators/detail/point_iterator" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators/detail/segment_iterator" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators/dispatch" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/multi" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/multi/algorithms" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies/is_valid" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies/relate" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies/robustness" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/agnostic" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/cartesian" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/concepts" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/geographic" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/spherical" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/transform" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/util" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/views" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/views/detail" "${PODS_ROOT}/Headers/Public/boost/boost/integer" "${PODS_ROOT}/Headers/Public/boost/boost/intrusive" "${PODS_ROOT}/Headers/Public/boost/boost/intrusive/detail" "${PODS_ROOT}/Headers/Public/boost/boost/iterator" "${PODS_ROOT}/Headers/Public/boost/boost/iterator/detail" "${PODS_ROOT}/Headers/Public/boost/boost/lexical_cast" "${PODS_ROOT}/Headers/Public/boost/boost/lexical_cast/detail" "${PODS_ROOT}/Headers/Public/boost/boost/math" "${PODS_ROOT}/Headers/Public/boost/boost/math/constants" "${PODS_ROOT}/Headers/Public/boost/boost/math/policies" "${PODS_ROOT}/Headers/Public/boost/boost/math/special_functions" "${PODS_ROOT}/Headers/Public/boost/boost/math/special_functions/detail" "${PODS_ROOT}/Headers/Public/boost/boost/math/tools" "${PODS_ROOT}/Headers/Public/boost/boost/move" "${PODS_ROOT}/Headers/Public/boost/boost/move/detail" "${PODS_ROOT}/Headers/Public/boost/boost/mpl" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_/config" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_/preprocessed/gcc" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_/preprocessor" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/limits" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/list" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/list/aux_" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/list/aux_/preprocessed/plain" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/set" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/set/aux_" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/set/aux_/preprocessed/plain" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/vector" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/vector/aux_" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/vector/aux_/preprocessed/typeof_based" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/conversion" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/conversion/detail" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/conversion/detail/preprocessed" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/ublas" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/ublas/detail" "${PODS_ROOT}/Headers/Public/boost/boost/optional" "${PODS_ROOT}/Headers/Public/boost/boost/predef" "${PODS_ROOT}/Headers/Public/boost/boost/predef/architecture" "${PODS_ROOT}/Headers/Public/boost/boost/predef/architecture/x86" "${PODS_ROOT}/Headers/Public/boost/boost/predef/compiler" "${PODS_ROOT}/Headers/Public/boost/boost/predef/detail" "${PODS_ROOT}/Headers/Public/boost/boost/predef/language" "${PODS_ROOT}/Headers/Public/boost/boost/predef/library" "${PODS_ROOT}/Headers/Public/boost/boost/predef/library/c" "${PODS_ROOT}/Headers/Public/boost/boost/predef/library/std" "${PODS_ROOT}/Headers/Public/boost/boost/predef/os" "${PODS_ROOT}/Headers/Public/boost/boost/predef/os/bsd" "${PODS_ROOT}/Headers/Public/boost/boost/predef/other" "${PODS_ROOT}/Headers/Public/boost/boost/predef/platform" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/arithmetic" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/arithmetic/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/array" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/comparison" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/config" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/control" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/control/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/debug" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/facilities" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/iteration" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/iteration/detail/bounds" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/iteration/detail/iter" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/list" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/list/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/logical" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/punctuation" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/repetition" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/repetition/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/seq" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/slot" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/slot/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/tuple" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/tuple/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/variadic" "${PODS_ROOT}/Headers/Public/boost/boost/range" "${PODS_ROOT}/Headers/Public/boost/boost/range/adaptor" "${PODS_ROOT}/Headers/Public/boost/boost/range/algorithm" "${PODS_ROOT}/Headers/Public/boost/boost/range/detail" "${PODS_ROOT}/Headers/Public/boost/boost/serialization" "${PODS_ROOT}/Headers/Public/boost/boost/smart_ptr" "${PODS_ROOT}/Headers/Public/boost/boost/smart_ptr/detail" "${PODS_ROOT}/Headers/Public/boost/boost/tuple" "${PODS_ROOT}/Headers/Public/boost/boost/tuple/detail" "${PODS_ROOT}/Headers/Public/boost/boost/type_index" "${PODS_ROOT}/Headers/Public/boost/boost/type_traits" "${PODS_ROOT}/Headers/Public/boost/boost/type_traits/detail" "${PODS_ROOT}/Headers/Public/boost/boost/typeof" "${PODS_ROOT}/Headers/Public/boost/boost/utility" "${PODS_ROOT}/Headers/Public/boost/boost/utility/detail" "${PODS_ROOT}/Headers/Public/boost/boost/variant" "${PODS_ROOT}/Headers/Public/boost/boost/variant/detail"
OTHER_LDFLAGS = ${PODS_TESTS_GEOFEATURES_OTHER_LDFLAGS} -ObjC
PODS_ROOT = ${SRCROOT}
SKIP_INSTALL = YES