CLANG_CXX_LANGUAGE_STANDARD = c++0x
CLANG_CXX_LIBRARY = libc++
GCC_C_LANGUAGE_STANDARD = c11
GCC_PREPROCESSOR_DEFINITIONS = $(inherited) COCOAPODS=1
HEADER_SEARCH_PATHS = $(inherited) "${PODS_ROOT}/Headers/Public" "${PODS_ROOT}/Headers/Public/GeoFeatures" "${PODS_ROOT}/Headers/Public/boost" "${PODS_ROOT}/Headers/Public/boost/boost" "${PODS_ROOT}/Headers/Public/boost/boost/algorithm" "${PODS_ROOT}/Headers/Public/boost/boost/algorithm/string" "${PODS_ROOT}/Headers/Public/boost/boost/algorithm/string/detail" "${PODS_ROOT}/Headers/Public/boost/boost/algorithm/string/std" "${PODS_ROOT}/Headers/Public/boost/boost/bind" "${PODS_ROOT}/Headers/Public/boost/boost/concept" "${PODS_ROOT}/Headers/Public/boost/boost/concept/detail" "${PODS_ROOT}/Headers/Public/boost/boost/concept_check" "${PODS_ROOT}/Headers/Public/boost/boost/config" "${PODS_ROOT}/Headers/Public/boost/boost/config/abi" "${PODS_ROOT}/Headers/Public/boost/boost/config/compiler" "${PODS_ROOT}/Headers/Public/boost/boost/config/no_tr1" "${PODS_ROOT}/Headers/Public/boost/boost/config/platform" "${PODS_ROOT}/Headers/Public/boost/boost/config/stdlib" "${PODS_ROOT}/Headers/Public/boost/boost/container" "${PODS_ROOT}/Headers/Public/boost/boost/container/detail" "${PODS_ROOT}/Headers/Public/boost/boost/core" "${PODS_ROOT}/Headers/Public/boost/boost/detail" "${PODS_ROOT}/Headers/Public/boost/boost/exception" "${PODS_ROOT}/Headers/Public/boost/boost/exception/detail" "${PODS_ROOT}/Headers/Public/boost/boost/format" "${PODS_ROOT}/Headers/Public/boost/boost/format/detail" "${PODS_ROOT}/Headers/Public/boost/boost/function" "${PODS_ROOT}/Headers/Public/boost/boost/function/detail" "${PODS_ROOT}/Headers/Public/boost/boost/function_types" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/config" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/components_impl" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/encoding" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_cc_loop" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_retag_default_cc" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_tags" "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_variate_loop" "${PODS_ROOT}/Headers/Public/boost/boost/functional" "${PODS_ROOT}/Headers/Public/boost/boost/functional/hash" "${PODS_ROOT}/Headers/Public/boost/boost/geometry" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/buffer" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/centroid" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/closest_feature" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/comparable_distance" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/disjoint" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/distance" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/equals" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/intersection" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/is_simple" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/is_valid" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/overlay" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/relate" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/sections" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/turns" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/within" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/dispatch" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/arithmetic" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/core" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/geometries" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/geometries/concepts" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/adaptors" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/algorithms" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/linear" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/node" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/quadratic" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/rstar" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/utilities" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/visitors" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/dsv" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/svg" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/wkt" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/wkt/detail" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators/detail/point_iterator" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators/detail/segment_iterator" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators/dispatch" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/multi" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/multi/algorithms" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies/is_valid" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies/relate" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies/robustness" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/agnostic" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/cartesian" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/concepts" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/geographic" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/spherical" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/transform" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/util" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/views" "${PODS_ROOT}/Headers/Public/boost/boost/geometry/views/detail" "${PODS_ROOT}/Headers/Public/boost/boost/integer" "${PODS_ROOT}/Headers/Public/boost/boost/intrusive" "${PODS_ROOT}/Headers/Public/boost/boost/intrusive/detail" "${PODS_ROOT}/Headers/Public/boost/boost/iterator" "${PODS_ROOT}/Headers/Public/boost/boost/iterator/detail" "${PODS_ROOT}/Headers/Public/boost/boost/lexical_cast" "${PODS_ROOT}/Headers/Public/boost/boost/lexical_cast/detail" "${PODS_ROOT}/Headers/Public/boost/boost/math" "${PODS_ROOT}/Headers/Public/boost/boost/math/constants" "${PODS_ROOT}/Headers/Public/boost/boost/math/policies" "${PODS_ROOT}/Headers/Public/boost/boost/math/special_functions" "${PODS_ROOT}/Headers/Public/boost/boost/math/special_functions/detail" "${PODS_ROOT}/Headers/Public/boost/boost/math/tools" "${PODS_ROOT}/Headers/Public/boost/boost/move" "${PODS_ROOT}/Headers/Public/boost/boost/move/detail" "${PODS_ROOT}/Headers/Public/boost/boost/mpl" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_/config" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_/preprocessed/gcc" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_/preprocessor" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/limits" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/list" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/list/aux_" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/list/aux_/preprocessed/plain" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/set" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/set/aux_" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/set/aux_/preprocessed/plain" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/vector" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/vector/aux_" "${PODS_ROOT}/Headers/Public/boost/boost/mpl/vector/aux_/preprocessed/typeof_based" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/conversion" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/conversion/detail" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/conversion/detail/preprocessed" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/ublas" "${PODS_ROOT}/Headers/Public/boost/boost/numeric/ublas/detail" "${PODS_ROOT}/Headers/Public/boost/boost/optional" "${PODS_ROOT}/Headers/Public/boost/boost/predef" "${PODS_ROOT}/Headers/Public/boost/boost/predef/architecture" "${PODS_ROOT}/Headers/Public/boost/boost/predef/architecture/x86" "${PODS_ROOT}/Headers/Public/boost/boost/predef/compiler" "${PODS_ROOT}/Headers/Public/boost/boost/predef/detail" "${PODS_ROOT}/Headers/Public/boost/boost/predef/language" "${PODS_ROOT}/Headers/Public/boost/boost/predef/library" "${PODS_ROOT}/Headers/Public/boost/boost/predef/library/c" "${PODS_ROOT}/Headers/Public/boost/boost/predef/library/std" "${PODS_ROOT}/Headers/Public/boost/boost/predef/os" "${PODS_ROOT}/Headers/Public/boost/boost/predef/os/bsd" "${PODS_ROOT}/Headers/Public/boost/boost/predef/other" "${PODS_ROOT}/Headers/Public/boost/boost/predef/platform" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/arithmetic" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/arithmetic/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/array" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/comparison" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/config" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/control" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/control/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/debug" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/facilities" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/iteration" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/iteration/detail/bounds" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/iteration/detail/iter" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/list" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/list/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/logical" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/punctuation" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/repetition" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/repetition/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/seq" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/slot" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/slot/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/tuple" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/tuple/detail" "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/variadic" "${PODS_ROOT}/Headers/Public/boost/boost/range" "${PODS_ROOT}/Headers/Public/boost/boost/range/adaptor" "${PODS_ROOT}/Headers/Public/boost/boost/range/algorithm" "${PODS_ROOT}/Headers/Public/boost/boost/range/detail" "${PODS_ROOT}/Headers/Public/boost/boost/serialization" "${PODS_ROOT}/Headers/Public/boost/boost/smart_ptr" "${PODS_ROOT}/Headers/Public/boost/boost/smart_ptr/detail" "${PODS_ROOT}/Headers/Public/boost/boost/tuple" "${PODS_ROOT}/Headers/Public/boost/boost/tuple/detail" "${PODS_ROOT}/Headers/Public/boost/boost/type_index" "${PODS_ROOT}/Headers/Public/boost/boost/type_traits" "${PODS_ROOT}/Headers/Public/boost/boost/type_traits/detail" "${PODS_ROOT}/Headers/Public/boost/boost/typeof" "${PODS_ROOT}/Headers/Public/boost/boost/utility" "${PODS_ROOT}/Headers/Public/boost/boost/utility/detail" "${PODS_ROOT}/Headers/Public/boost/boost/variant" "${PODS_ROOT}/Headers/Public/boost/boost/variant/detail"
OTHER_CFLAGS = $(inherited) -isystem "${PODS_ROOT}/Headers/Public" -isystem "${PODS_ROOT}/Headers/Public/GeoFeatures" -isystem "${PODS_ROOT}/Headers/Public/boost" -isystem "${PODS_ROOT}/Headers/Public/boost/boost" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/algorithm" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/algorithm/string" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/algorithm/string/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/algorithm/string/std" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/bind" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/concept" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/concept/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/concept_check" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/config" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/config/abi" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/config/compiler" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/config/no_tr1" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/config/platform" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/config/stdlib" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/container" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/container/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/core" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/exception" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/exception/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/format" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/format/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function_types" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function_types/config" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/components_impl" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/encoding" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_cc_loop" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_retag_default_cc" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_tags" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/function_types/detail/pp_variate_loop" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/functional" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/functional/hash" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/buffer" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/centroid" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/closest_feature" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/comparable_distance" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/disjoint" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/distance" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/equals" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/intersection" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/is_simple" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/is_valid" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/overlay" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/relate" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/sections" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/turns" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/detail/within" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/algorithms/dispatch" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/arithmetic" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/core" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/geometries" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/geometries/concepts" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/adaptors" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/algorithms" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/linear" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/node" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/quadratic" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/rstar" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/utilities" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/index/detail/rtree/visitors" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/dsv" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/svg" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/wkt" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/io/wkt/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators/detail/point_iterator" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators/detail/segment_iterator" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/iterators/dispatch" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/multi" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/multi/algorithms" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies/is_valid" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies/relate" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/policies/robustness" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/agnostic" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/cartesian" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/concepts" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/geographic" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/spherical" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/strategies/transform" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/util" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/views" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/geometry/views/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/integer" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/intrusive" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/intrusive/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/iterator" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/iterator/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/lexical_cast" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/lexical_cast/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/math" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/math/constants" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/math/policies" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/math/special_functions" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/math/special_functions/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/math/tools" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/move" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/move/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_/config" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_/preprocessed/gcc" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/aux_/preprocessor" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/limits" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/list" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/list/aux_" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/list/aux_/preprocessed/plain" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/set" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/set/aux_" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/set/aux_/preprocessed/plain" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/vector" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/vector/aux_" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/mpl/vector/aux_/preprocessed/typeof_based" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/numeric/conversion" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/numeric/conversion/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/numeric/conversion/detail/preprocessed" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/numeric/ublas" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/numeric/ublas/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/optional" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/architecture" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/architecture/x86" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/compiler" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/language" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/library" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/library/c" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/library/std" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/os" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/os/bsd" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/other" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/predef/platform" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/arithmetic" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/arithmetic/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/array" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/comparison" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/config" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/control" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/control/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/debug" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/facilities" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/iteration" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/iteration/detail/bounds" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/iteration/detail/iter" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/list" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/list/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/logical" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/punctuation" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/repetition" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/repetition/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/seq" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/slot" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/slot/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/tuple" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/tuple/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/preprocessor/variadic" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/range" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/range/adaptor" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/range/algorithm" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/range/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/serialization" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/smart_ptr" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/smart_ptr/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/tuple" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/tuple/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/type_index" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/type_traits" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/type_traits/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/typeof" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/utility" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/utility/detail" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/variant" -isystem "${PODS_ROOT}/Headers/Public/boost/boost/variant/detail"
OTHER_LDFLAGS = $(inherited) -ObjC -l"Pods-GeoFeatures-GeoFeatures" -l"c++" -framework "MapKit"
OTHER_LIBTOOLFLAGS = $(OTHER_LDFLAGS)
PODS_ROOT = ${SRCROOT}/Pods